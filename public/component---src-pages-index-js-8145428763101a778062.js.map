{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","localFile","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","useStaticQuery","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-8145428763101a778062.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\r\nconst Project = ({ description, title, github, stack, url, image, index }) => {\r\n  return (\r\n    <article className=\"project\">\r\n      {image && (\r\n        <Image\r\n          fluid={image.localFile.childImageSharp.fluid}\r\n          className=\"project-img\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"project-info\">\r\n        <span className=\"project-number\"> 0{index + 1}</span>\r\n        <h3>{title}</h3>\r\n        <p className=\"project-des\">{description}</p>\r\n        <div className=\"project-stack\">\r\n          {stack.map(item => {\r\n            return <span key={item.id}>{item.title}</span>\r\n          })}\r\n        </div>\r\n        <div className=\"project-links\">\r\n          <a href={github}>\r\n            <FaGithubSquare className=\"project-icon\" />\r\n          </a>\r\n          <a href={url}>\r\n            <FaShareSquare className=\"project-icon\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nProject.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  github: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\n\r\nexport default Project\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Project from \"./Project\"\r\nimport { Link } from \"gatsby\"\r\nconst Projects = ({ projects, title, showLink }) => {\r\n  return (\r\n    <section className=\"section projects\">\r\n      <Title title={title} />\r\n      <div className=\"section-center projects-center\">\r\n        {projects.map((project, index) => {\r\n          return <Project key={project.id} index={index} {...project} />\r\n        })}\r\n      </div>\r\n\r\n      {showLink && (\r\n        <Link to=\"/projects\" className=\"btn center-btn\">\r\n          Projects\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from \"react\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport SocialLinks from \"../constants/socialLinks\"\r\n// ...GatsbyImageSharpFluid\r\nconst query = graphql`\r\n  {\r\n    file(relativePath: { eq: \"hero-img.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Hero = () => {\r\n  const {\r\n    file: {\r\n      childImageSharp: { fluid },\r\n    },\r\n  } = useStaticQuery(query)\r\n\r\n  return (\r\n    <header className=\"hero\">\r\n      <div className=\"section-center hero-center\">\r\n        <article className=\"hero-info\">\r\n          <div>\r\n            <div className=\"underline\"></div>\r\n            <h1>I'm Emmanuel</h1>\r\n            <h4>Front-End Developer</h4>\r\n            <Link to=\"/contact\" className=\"btn\">\r\n              Contact me\r\n            </Link>\r\n            <SocialLinks></SocialLinks>\r\n          </div>\r\n        </article>\r\n        <Image fluid={fluid} className=\"hero-img\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from \"react\"\nimport { FaCode,FaPenNib } from \"react-icons/fa\"\nimport { FcSupport } from \"react-icons/fc\";\n\n\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `Creating a website from scratch, including requirements gathering, design, implementation, quality assurance as well as maintenance and support.`,\n  },\n  {\n    id: 2,\n    icon: <FaPenNib className=\"service-icon\"/>,\n    title: \"web design\",\n    text: `Web Design Services That Maximize Your Revenue\n    In today’s digital world, your website is the first interaction consumers have with your business.`,\n  },\n  {\n    id: 3,\n    icon: <FcSupport className=\"service-icon\" />,\n    title: \"Website support\",\n    text: `Your website needs care and support to perform at it´s best.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map((service)=>{\n          const {id,icon,title,text} = service\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport {  FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: {fields: strapiId, order: DESC}) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data=useStaticQuery(query);\n  const {\n    allStrapiJobs: {nodes:jobs},\n  } =data\n  const [value,setValue] =React.useState(0);\n  const {company,position,date,desc} = jobs[value]\n  return <section className=\"section jobs\">\n    <Title title=\"Experience\" />\n    <div className=\"jobs-center\">\n      <div className=\"btn-container\">\n        {jobs.map((item,index)=>{\n          return <button key ={item.strapiId} onClick={() =>{setValue(index)} } className={`job-btn ${index === value && \"active-btn\"}`}>{item.company}</button>\n\n\n        })}\n      </div>\n      {/* job info */}\n      <article className=\"job-info\">\n        <h3>{position}</h3>\n        <h4>{company}</h4>\n        <p className=\"job-date\">{date}</p>\n        {\n          desc.map((item) => {\n            return <div key={item.id} className=\"job-desc\">\n              <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n              <p>{item.name}</p>\n            </div>\n          })\n        }\n      </article>\n    </div>\n    <Link to=\"/about\" className=\"btn center-btn\">More info</Link>\n  </section>\n}\n\nexport default Jobs\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport Hero from \"../components/Hero\"\r\nimport Services from \"../components/Services\"\r\nimport Jobs from \"../components/Jobs\"\r\nimport Projects from \"../components/Projects\"\r\nimport Blogs from \"../components/Blogs\"\r\nimport SEO from \"../components/SEO\"\r\nexport default ({ data }) => {\r\n  const {\r\n    allStrapiProjects: { nodes: projects },\r\n    allStrapiBlogs: { nodes: blogs },\r\n  } = data\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" description=\"this is our home page\" />\r\n      <Hero />\r\n      <Services />\r\n      <Jobs />\r\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\r\n      <Blogs blogs={blogs} title=\"Blog\" showLink />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  {\r\n    allStrapiProjects(\r\n      filter: { featured: { eq: true } }\r\n      sort: { fields: strapiId, order: DESC }\r\n    ) {\r\n      nodes {\r\n        strapiId\r\n        github\r\n        id\r\n        description\r\n        title\r\n        url\r\n        image {\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n        stack {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        content\r\n        desc\r\n        date(formatString: \"MMMM Do, YYYY\")\r\n        id\r\n        title\r\n        category\r\n        image {\r\n          localFile {\r\n            childImageSharp {\r\n              fluid {\r\n                originalImg\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n// ...GatsbyImageSharpFluid\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Image from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\r\n  return (\r\n    <Link to={`/blogs/${slug}`} key={id} className=\"blog\">\r\n      <article>\r\n        {image && (\r\n          <Image\r\n            fluid={image.localFile.childImageSharp.fluid}\r\n            className=\"blog-img\"\r\n          />\r\n        )}\r\n        <div className=\"blog-card\">\r\n          <h4>{title}</h4>\r\n          <p>{desc}</p>\r\n          <div className=\"blog-footer\">\r\n            <p>{category}</p>\r\n            <p>{date}</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Link>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport Title from \"./Title\"\r\nimport Blog from \"./Blog\"\r\nimport { Link } from \"gatsby\"\r\nexport const Blogs = ({ blogs, title, showLink }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <Title title={title} />\r\n      <div className=\"section-center blogs-center\">\r\n        {blogs.map(blog => {\r\n          return <Blog key={blog.id} {...blog} />\r\n        })}\r\n      </div>\r\n      {showLink && (\r\n        <Link to=\"/blog\" className=\"btn center-btn\">\r\n          Blog\r\n        </Link>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\nexport default Blogs\r\n"],"sourceRoot":""}